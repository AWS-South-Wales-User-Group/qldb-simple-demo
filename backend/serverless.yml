# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: qldb-simple-demo

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  logRetentionInDays: 7 # Set the default RetentionInDays for a CloudWatch LogGroup
  tracing:
    apiGateway: true
    lambda: true # Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED	: "1"
    LEDGER_NAME: qldb-simple-demo-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - qldb:SendCommand
      Resource: arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource: "*" # Restrict resource to minimum required

plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules: false   # Node modules configuration for packaging
    packager: 'npm'   # Packager that will be used to package your external modules
  

functions:
  createLicence:
    name: create-licence-${self:provider.stage}
    handler: functions/create-licence.handler
    events:
      - http:
          path: /licences
          method: post

  updateLicence:
    name: update-licence-${self:provider.stage}
    handler: functions/update-licence.handler
    events:
      - http:
          path: /licences
          method: put

  updateContact:
    name: update-contact-${self:provider.stage}
    handler: functions/update-contact.handler
    events:
      - http:
          path: /licences/contact
          method: put

  deleteLicence:
    name: delete-licence-${self:provider.stage}
    handler: functions/delete-licence.handler
    events:
      - http:
          path: /licences
          method: delete
    
  getLicence:
    name: get-licence-${self:provider.stage}
    handler: functions/get-licence.handler
    events:
      - http:
          path: /licences/{licenceid}
          method: get

  createTable:
    name: qldb-demo-table-${self:provider.stage}
    handler: functions/qldbTable.handler
    memorySize: 256
    timeout: 6
    environment:
      TABLE_NAME: BicycleLicence

  createIndex:
    name: qldb-demo-index-${self:provider.stage}
    handler: functions/qldbIndex.handler
    memorySize: 256
    timeout: 6
    environment:
      TABLE_NAME: BicycleLicence
      INDEX_NAME_1: GUID
      INDEX_NAME_2: Email
      INDEX_NAME_3: Telephone

resources:
  Resources:
    qldbGuideLedger:
      Type: AWS::QLDB::Ledger
      Properties:
        Name: qldb-simple-demo-${self:provider.stage}
        DeletionProtection: false
        PermissionsMode: ALLOW_ALL
        Tags:
          - 
            Key: name
            Value: qldb-simple-demo

    qldbTable:
      Type: Custom::qldbTable
      DependsOn: qldbGuideLedger
      Properties:
        ServiceToken: !GetAtt CreateTableLambdaFunction.Arn
        Version: 1.0  #change this to force redeploy

    qldbIndex:
      Type: Custom::qldbIndexes
      DependsOn: qldbTable
      Properties:
        ServiceToken: !GetAtt CreateIndexLambdaFunction.Arn
        Version: 1.0  #change this to force redeploy      