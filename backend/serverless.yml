service: qldb-simple-demo
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  lambdaHashingVersion: "20201221"
  logRetentionInDays: 7 # Set the default RetentionInDays for a CloudWatch LogGroup
  tracing:
    apiGateway: true
    lambda: true # Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED	: "1"
    LEDGER_NAME: qldb-simple-demo-${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'qldb:SendCommand'
          Resource:
            - !Sub "arn:aws:qldb:${AWS::Region}:${AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}"
        - Effect: "Allow"
          Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
          Resource: "*" # Restrict resource to minimum required

plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-esbuild

functions:
  createLicence:
    name: create-licence-${self:provider.stage}
    handler: functions/create-licence.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-createLicence
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLInsert
          - qldb:PartiQLSelect
          - qldb:PartiQLUpdate
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    events:
      - http:
          path: /licences
          method: post

  updateLicence:
    name: update-licence-${self:provider.stage}
    handler: functions/update-licence.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-updateLicence
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
          - qldb:PartiQLUpdate
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    events:
      - http:
          path: /licences
          method: put

  updateContact:
    name: update-contact-${self:provider.stage}
    handler: functions/update-contact.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-updateContact
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
          - qldb:PartiQLUpdate
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    events:
      - http:
          path: /licences/contact
          method: put

  deleteLicence:
    name: delete-licence-${self:provider.stage}
    handler: functions/delete-licence.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-deleteLicence
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
          - qldb:PartiQLDelete
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    events:
      - http:
          path: /licences
          method: delete

  getLicence:
    name: get-licence-${self:provider.stage}
    handler: functions/get-licence.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-getLicence
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    events:
      - http:
          path: /licences/{licenceid}
          method: get
  
  createTable:
    name: qldb-demo-table-${self:provider.stage}
    handler: functions/qldbTable.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-createTable
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLCreateTable
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    memorySize: 256
    timeout: 6
    environment:
      TABLE_NAME: BicycleLicence

  createIndex:
    name: qldb-demo-index-${self:provider.stage}
    handler: functions/qldbIndex.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: qldb-simple-demo-createIndex
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLCreateIndex
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/qldb-simple-demo-${self:provider.stage}/*"
    memorySize: 256
    timeout: 6
    environment:
      TABLE_NAME: BicycleLicence
      INDEX_NAME_1: GUID
      INDEX_NAME_2: Email
      INDEX_NAME_3: Telephone

resources:
  Resources:
    qldbLedger:
      Type: AWS::QLDB::Ledger
      Properties:
        Name: qldb-simple-demo-${self:provider.stage}
        DeletionProtection: false
        PermissionsMode: STANDARD
        Tags:
          - 
            Key: name
            Value: qldb-simple-demo

    qldbTable:
      Type: Custom::qldbTable
      DependsOn: qldbLedger
      Properties:
        ServiceToken: !GetAtt CreateTableLambdaFunction.Arn
        Version: 1.0  #change this to force redeploy

    qldbIndex:
      Type: Custom::qldbIndexes
      DependsOn: qldbTable
      Properties:
        ServiceToken: !GetAtt CreateIndexLambdaFunction.Arn
        Version: 1.0  #change this to force redeploy      

  Outputs:
    qldbBicycleLicenceLedger:
      Value:
        Ref: qldbLedger
      Export:
        Name: qldb-simple-demo